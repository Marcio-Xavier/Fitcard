@model TesteFitcard.ViewModels.CategoryFormViewModel

@{
    ViewBag.Title = Model.title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="lead"><b>Model.title.</b> O campo marcado com <b>*</b> é obrigatório.</p>
<hr />
@using (Html.BeginForm("Save", "Category", new { id = "CategoryForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-sm-7">
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.category.description, htmlAttributes: new { @class = "control-label" }) <b>*</b>
                        @Html.EditorFor(model => model.category.description, new { htmlAttributes = new { @class = "form-control form-control-sm col", @id = "TxtBoxDescription", @onkeyup = "ValidateFormDescription()", @maxlength = "100" } })
                        <span class="invalid-feedback">A Descrição deve ser preenchida</span>
                    </div>
                </div>
            </div>
        </div>
        <span class="btn btn-success my-span" onclick="Save()">Salvar</span>
        <button type="submit" id="BtnSubmit">Save</button>
        <hr />
        @Html.HiddenFor(model => model.category.ID, new { @id = "categoryID" })
    </div>
}
@section Scripts{
    @Scripts.Render("~/Scripts/Category/SignupForm.js")
    @Scripts.Render("~/Scripts/Category/PaintFields.js")
}

